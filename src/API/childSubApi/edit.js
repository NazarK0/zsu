"use strict";const{link:n}=require("fs"),e=require("lodash"),t=require("../../Models/ChildSub"),d=require("../../Models/Content"),i=require("../../Models/Submenu");module.exports.updateChildSub=async n=>{const{id:e}=n.params,{title:a,lang:l,content_id:o,link_id:u}=n.body;try{if("null"!==o&&"unlink"!==o&&o)await d.updateMany({generated_menu_link:e},{generated_menu_link:null}),"historyWar"!==o&&"files"!==o&&"contacts"!==o&&"actual"!==o&&"commander"!==o&&await d.findByIdAndUpdate(o,{generated_menu_link:e}),await t.updateMany({content_id:o},{content_id:null}),await t.findByIdAndUpdate(e,{title:a,lang:l,content_id:o}),await i.updateMany({content_id:o},{content_id:null});else if("unlink"===o){const n=await t.findById(e);"null"!==n.content_id&&n.content_id&&await d.findByIdAndUpdate(n.content_id,{generated_menu_link:null}),await t.findByIdAndUpdate(e,{title:a,lang:l,content_id:null})}else await t.findByIdAndUpdate(e,{title:a,lang:l,link:"null"!==u?u:null})}catch(c){console.log(c)}},module.exports.deleteChildSub=async n=>{const{id:i}=n.params;try{const n=await t.findByIdAndRemove(i);let a=await t.find().where({parent_sub:n.parent_sub}).sort({number:1}).lean();for(let e=0;e<a.length;e++)await t.findByIdAndUpdate({_id:a[e]._id},{$set:{number:e+1}});"null"!==n.content_id&&n.content_id&&"historyWar"!==n.content_id&&"files"!==n.content_id&&"contacts"!==n.content_id&&"actual"!==n.content_id&&"commander"!==n.content_id&&await d.findByIdAndUpdate(n.content_id,{generated_menu_link:null});const l=await t.find({parent_sub:n.id}).select({_id:1});let o=[];for(let e=0;e<l.length;e++)o.push(await t.find({parent_sub:l[e].id}).select({_id:1}));o=e.flattenDeep(o);const u=e.concat(l,o);for(let e=0;e<u.length;e++)await t.findByIdAndDelete(u[e].id),await d.findOneAndUpdate({generated_menu_link:u[e]},{generated_menu_link:null})}catch(a){console.log(a)}};