"use strict";const e=require("../Models/User"),s=require("../API/hashing_password"),i=require("../API/getAdminid"),r=require("../API/op_categories"),{CreateSession:o,ValidSession:n}=require("../API/Session/session"),{setAllOperation:a}=require("../API/checkUserOperation"),t=require("../API/initUploadFolders");module.exports.getLoginPage=async(s,i)=>{const r=await e.findOne({login:"SystemUser"});!1===Boolean(r)?await d(s,i):(i.status(200),i.render("login"))},module.exports.login=async(i,r)=>{try{const n=await e.findOne({login:i.body.login});if(n){const e=s.hashpassword(i.body.password);n.password===e?(await o(i.session,n.id),t(),r.redirect(`/admin/${n.id}/main`)):r.status(400).render("infopage",{url:"/admin/login",url_text:"Повернутися до форми авторизації",info:"Невірно введений пароль!"})}else r.status(400).render("infopage",{url:"/admin/login",url_text:"Повернутися до форми авторизації",info:"Такого користувача не існує!"})}catch(n){console.error(n)}};const d=async(i,r)=>{const o=new e({login:"SystemUser",email:"testmail",password:s.hashpassword("1111"),type:"system_user",operation:a(),creator:{id:"SYSTEM",login:"Система"}});await o.save(),r.redirect("/admin/login")};