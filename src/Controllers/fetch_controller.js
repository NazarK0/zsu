"use strict";const e=require("path"),n=require("fs"),i=require("image-size"),a=require("sharp"),t=require("moment"),s=require("jimp"),o=require("../Models/News"),d=require("../Models/Page"),r=require("../Models/Category"),l=require("../Models/MediaCategory"),c=require("../Models/Link"),y=require("../Models/CorpsSign"),p=require("../Models/CorpsBackground"),f=require("../Models/CommandSign"),m=require("../Models/CommandBackground"),u=require("../Models/Content"),w=require("../API/isExistHelper"),g=require("../Models/ActualContent"),S=require("../API/initUploadFolders"),h=require("../API/filenameProcessor"),{imgFolderPath:I,tmpFolderPath:_,filesFolderPath:b}=require("../API/constants/uploadPaths"),{all:j}=require("../Routes/fetch_router");module.exports.postUploadMainPhoto=async(i,a)=>{const{file:t}=await i;let{contentId:s}=await i.body;const{contentType:r}=await i.body;if(S(),t){const{filename:i,originalname:l}=t,c=h(l);if(n.renameSync(e.join(_,i),e.join(I,c)),s)switch(r){case"news":await o.findByIdAndUpdate(s,{mainPhoto:c});break;case"page":await d.findByIdAndUpdate(s,{mainPhoto:c})}else{let e;switch(r){case"news":e=await new o({public_status:"uncomplete",mainPhoto:c}).save(),s=e.id;break;case"page":e=await new d({public_status:"uncomplete",mainPhoto:c}).save(),s=e.id}}return a.send(JSON.stringify({filename:c,contentId:s}))}return a.sendStatus(503)},module.exports.postDeleteMainPhoto=async(i,a)=>{const{contentId:t,contentType:s}=i.body;switch(s){case"news":{const{mainPhoto:i}=await o.findById(t).select({_id:0,mainPhoto:1}).lean();n.unlinkSync(e.join(I,i)),await o.findByIdAndUpdate(t,{mainPhoto:""})}break;case"page":{const{mainPhoto:i}=await d.findById(t).select({_id:0,mainPhoto:1}).lean();n.unlinkSync(e.join(I,i)),await d.findByIdAndUpdate(t,{mainPhoto:""})}}return a.sendStatus(200)},module.exports.postUploadSlider=async(i,a)=>{const{files:t}=await i;let{contentId:s}=await i.body;const{contentType:r}=await i.body,l=[];if(t.length)if(S(),t.forEach(i=>{const{filename:a,originalname:t}=i,s=h(t);n.renameSync(e.join(_,a),e.join(I,s)),l.push(s)}),s)switch(r){case"news":await o.findByIdAndUpdate(s,{slider:l});break;case"page":await d.findByIdAndUpdate(s,{slider:l})}else{let e;switch(r){case"news":e=await new o({public_status:"uncomplete",slider:l}).save(),s=e.id;break;case"page":e=await new d({public_status:"uncomplete",slider:l}).save(),s=e.id}}return a.send(JSON.stringify({filenames:l,contentId:s}))},module.exports.postAddSlider=async(i,a)=>{const{files:t}=await i,{contentId:s,contentType:r}=await i.body,l=[];switch(r){case"news":{const e=await o.findById(s).select({_id:0,slider:1});l.push(...e.slider)}break;case"page":{const e=await d.findById(s).select({_id:0,slider:1});l.push(...e.slider)}}if(t.length)switch(S(),t.forEach(i=>{const{filename:a,originalname:t}=i,s=h(t);n.renameSync(e.join(_,a),e.join(I,s)),l.push(s)}),r){case"news":await o.findByIdAndUpdate(s,{slider:l});break;case"page":await d.findByIdAndUpdate(s,{slider:l})}return a.send(JSON.stringify({filenames:l}))},module.exports.postDeleteSliderImage=async(i,a)=>{const{contentId:t,contentType:s,filename:r}=i.body;let l=[];switch(s){case"news":{const{slider:i}=await o.findById(t).select({_id:0,slider:1}).lean();n.unlinkSync(e.join(I,r));const a=i.indexOf(r);a>-1?(l=[...i.slice(0,a),...i.slice(a+1)],await o.findByIdAndUpdate(t,{slider:l})):l=i}break;case"page":{const{slider:i}=await d.findById(t).select({_id:0,slider:1}).lean();n.unlinkSync(e.join(I,r));const a=i.indexOf(r);a>-1?(l=[...i.slice(0,a),...i.slice(a+1)],await d.findByIdAndUpdate(t,{slider:l})):l=i}}return a.send(JSON.stringify({filenames:l}))},module.exports.postUploadFiles=async(i,a)=>{const{files:t}=await i;let{contentId:s}=await i.body;const{contentType:r}=await i.body,l=[];if(t.length)if(S(),t.forEach(i=>{const{filename:a,originalname:t}=i,s=h(t);n.renameSync(e.join(_,a),e.join(b,s)),l.push(s)}),s)switch(r){case"news":await o.findByIdAndUpdate(s,{files:l});break;case"page":await d.findByIdAndUpdate(s,{files:l})}else{let e;switch(r){case"news":e=await new o({public_status:"uncomplete",files:l}).save(),s=e.id;break;case"page":e=await new d({public_status:"uncomplete",files:l}).save(),s=e.id}}return a.send(JSON.stringify({filenames:l,contentId:s}))},module.exports.postAddFiles=async(i,a)=>{const{files:t}=await i,{contentId:s,contentType:r}=await i.body,l=[];switch(r){case"news":{const e=await o.findById(s).select({_id:0,files:1});l.push(...e.files)}break;case"page":{const e=await d.findById(s).select({_id:0,files:1});l.push(...e.files)}}if(t.length)switch(S(),t.forEach(i=>{const{filename:a,originalname:t}=i,s=h(t);n.renameSync(e.join(_,a),e.join(b,s)),l.push(s)}),r){case"news":await o.findByIdAndUpdate(s,{files:l});break;case"page":await d.findByIdAndUpdate(s,{files:l})}return a.send(JSON.stringify({filenames:l}))},module.exports.postDeleteFile=async(i,a)=>{const{contentId:t,contentType:s,filename:r}=i.body;let l=[];switch(s){case"news":{const{files:i}=await o.findById(t).select({_id:0,files:1}).lean();n.unlinkSync(e.join(b,r));const a=i.indexOf(r);a>-1?(l=[...i.slice(0,a),...i.slice(a+1)],await o.findByIdAndUpdate(t,{files:l})):l=i}break;case"page":{const{files:i}=await d.findById(t).select({_id:0,files:1}).lean();n.unlinkSync(e.join(b,r));const a=i.indexOf(r);a>-1?(l=[...i.slice(0,a),...i.slice(a+1)],await d.findByIdAndUpdate(t,{files:l})):l=i}}return a.send(JSON.stringify({filenames:l}))},module.exports.postSendCorpsBG=async(i,a)=>{const t=e.join(__dirname,"../..","uploads/images/corps/bg");if(n.existsSync(t)||n.mkdirSync(t,{recursive:!0}),i.files){const a=await i.files;for(const i of a){const{originalname:a,filename:s}=i,o=h(a);n.renameSync(e.join(_,s),e.join(t,o)),await new p({name:o,url:e.join(t,o),base64:n.readFileSync(e.join(t,o),"base64")}).save()}}const s=await p.find().select({_id:1,base64:2}).lean();return a.send(JSON.stringify(s))},module.exports.postDeleteCorpsBG=async(i,a)=>{const{id:t}=i.params,s=await p.findByIdAndDelete(t);if(s)try{n.unlinkSync(e.join(__dirname,"../..","uploads/images/corps/bg",s.name))}catch(d){console.error(d)}const o=await p.find().select({_id:1,base64:2}).lean();return a.send(JSON.stringify(o))},module.exports.postSendCorpsSign=async(i,a)=>{const t=e.join(__dirname,"../..","uploads/images/corps/sign");if(n.existsSync(t)||n.mkdirSync(t,{recursive:!0}),i.files){const a=await i.files;for(const i of a){const{originalname:a,filename:s}=i,o=h(a);n.renameSync(e.join(_,s),e.join(t,o)),await new y({name:o,url:e.join(t,o),base64:n.readFileSync(e.join(t,o),"base64")}).save()}}const s=await y.find().select({_id:1,base64:2}).lean();return a.send(JSON.stringify(s))},module.exports.postDeleteCorpsSign=async(i,a)=>{const{id:t}=i.params,s=await y.findByIdAndDelete(t);if(s)try{n.unlinkSync(e.join(__dirname,"../..","uploads/images/corps/sign",s.name))}catch(d){console.error(d)}const o=await y.find().select({_id:1,base64:2}).lean();return a.send(JSON.stringify(o))},module.exports.postSendCommandBG=async(i,a)=>{const t=e.join(__dirname,"../..","uploads/images/command/bg");if(n.existsSync(t)||n.mkdirSync(t,{recursive:!0}),i.files){const a=await i.files;for(const i of a){const{originalname:a,filename:s}=i,o=h(a);n.renameSync(e.join(_,s),e.join(t,o)),await new m({name:o,url:e.join(t,o),base64:n.readFileSync(e.join(t,o),"base64")}).save()}}const s=await m.find().select({_id:1,base64:2}).lean();return a.send(JSON.stringify(s))},module.exports.postDeleteCommandBG=async(i,a)=>{const{id:t}=i.params,s=await m.findByIdAndDelete(t);if(s)try{n.unlinkSync(e.join(__dirname,"../..","uploads/images/command/bg",s.name))}catch(d){console.error(d)}const o=await m.find().select({_id:1,base64:2}).lean();return a.send(JSON.stringify(o))},module.exports.postSendCommandSign=async(i,a)=>{const t=e.join(__dirname,"../..","uploads/images/command/sign");if(n.existsSync(t)||n.mkdirSync(t,{recursive:!0}),i.files){const a=await i.files;for(const i of a){const{originalname:a,filename:s}=i,o=h(a);n.renameSync(e.join(_,s),e.join(t,o)),await new f({name:o,url:e.join(t,o),base64:n.readFileSync(e.join(t,o),"base64")}).save()}}const s=await f.find().select({_id:1,base64:2}).lean();return a.send(JSON.stringify(s))},module.exports.postDeleteCommandSign=async(i,a)=>{const{id:t}=i.params,s=await f.findByIdAndDelete(t);if(s)try{n.unlinkSync(e.join(__dirname,"../..","uploads/images/command/sign",s.name))}catch(d){console.error(d)}const o=await f.find().select({_id:1,base64:2}).lean();return a.send(JSON.stringify(o))},module.exports.postUploadCategoryPhoto=async(i,a)=>{const{file:t}=await i;let{categoryId:s}=await i.body;if(S(),t){const{filename:i,originalname:o}=t,d=h(o);if(n.renameSync(e.join(_,i),e.join(I,d)),s)await r.findByIdAndUpdate(s,{img:d});else{s=(await new r({img:d}).save()).id}return a.send(JSON.stringify({filename:d,categoryId:s}))}return a.sendStatus(505)},module.exports.postDeleteCategoryPhoto=async(i,a)=>{const{categoryId:t}=i.body,s=await r.findById(t).lean();return await r.findByIdAndUpdate(t,{img:""}),n.unlinkSync(e.join(I,s.img)),a.sendStatus(200)},module.exports.Update=async(e,n)=>{JSON.parse(JSON.stringify(await u.find())).forEach(async e=>{await u.findByIdAndUpdate({_id:e._id},{$set:{public_status:"active"}})}),n.json(!0)},module.exports.postSetLinkImg=async(i,a)=>{const t=await i.file;let{linkId:o}=i.body;const d=e.join(__dirname,"../..","uploads","/images/links");let r;if((await c.find({title_ua:void 0,tilte_en:void 0}).lean()).forEach(({img:i})=>{n.unlinkSync(e.join(d,i))}),await c.deleteMany({title_ua:void 0}),t){const i=e.extname(t.originalname);o||(r=await(new c).save(),o=r.id),n.existsSync(d)||n.mkdirSync(d,{recursive:!0});const{isImgExist:l,filename:y}=w(o,d);l&&n.unlinkSync(e.join(d,y));const p="".concat(o,"-").concat(Date.now()).concat(i);return s.read(e.join(_,t.filename)).then(n=>n.cover(300,200).quality(60).write(e.join(d,p))).then(()=>n.unlinkSync(e.join(_,t.filename))),await c.findByIdAndUpdate(o,{img:p}),a.send(JSON.stringify({img:p,id:o}))}return a.sendStatus(404)},module.exports.postDeleteLinkImg=async(i,a)=>{const{id:t}=i.params,s=e.join(__dirname,"../..","uploads","/images/links"),o=n.readdirSync(s).find(e=>e.includes(t));o?(n.unlinkSync(e.join(s,o)),await c.findByIdAndUpdate(t,{img:""}),a.sendStatus(200)):a.sendStatus(404)},module.exports.getLinkPicture=async(n,i,a)=>{const{img:t}=n.params,s=e.join(__dirname,"../..","uploads/images/links",t);i.sendFile(s,e=>{a(e)})},module.exports.postUploadActualContentImg=async(i,a)=>{const{file:t}=await i;let{actualContentId:s}=await i.body;if(S(),t){const{filename:i,originalname:o}=t,d=h(o);if(n.renameSync(e.join(_,i),e.join(I,d)),s)await g.findByIdAndUpdate(s,{img:d});else{s=(await new g({img:d}).save()).id}return a.send(JSON.stringify({filename:d,actualContentId:s}))}return a.sendStatus(505)},module.exports.postDeleteActualContentImg=async(i,a)=>{const{actualContentId:t}=i.body,s=await g.findById(t).lean();return await g.findByIdAndUpdate(t,{img:""}),n.unlinkSync(e.join(I,s.img)),a.sendStatus(200)},module.exports.postSaveContentLinks=async(e,n)=>{let{contentId:i}=await e.body;const{contentType:a,user_pages:t=[]}=await e.body;if(i)switch(a){case"news":await o.findByIdAndUpdate(i,{links:t});break;case"page":await d.findByIdAndUpdate(i,{links:t})}else{let e;switch(a){case"news":e=await new o({public_status:"uncomplete",links:t}).save(),i=e.id;break;case"page":e=await new d({public_status:"uncomplete",links:t}).save(),i=e.id}}return n.send(JSON.stringify({contentId:i}))},module.exports.setMigrarion=async(e,n)=>{(await u.find().where({page_type:"content_page"}).lean()).forEach(async e=>{const{page_title:n,description:i,content_folder:a,content_baseUrl:s,keywords:o,categoryFK:r,html_body:l,lang:c,date:y,user_id:p}=e;await new d({title:n,description:i,keywords:o,html_body:l,language:c,user_id:p,public_status:"active",publishDate:t(y).toISOString(),slider:[],files:[],links:[]}).save()});(await u.find().where({page_type:"news"}).lean()).forEach(async e=>{const{page_title:n,description:i,keywords:a,lang:s,html_body:d,user_id:r,generated_category_link:l,page_subclass:c,date:y}=e;await new o({title:n,description:i,categoryFK:l,type:c,keywords:a,html_body:d,language:s,user_id:r,publishDate:t(y).toISOString(),slider:[],files:[],links:[]}).save()}),n.json("true")},module.exports.postUploadGalery=async(i,a)=>{const{files:t}=await i;let{categoryId:s}=await i.body;const o=[];return t.length&&(S(),t.forEach(i=>{const{filename:a,originalname:t}=i,s=h(t);n.renameSync(e.join(_,a),e.join(I,s)),o.push(s)}),s?await l.findByIdAndUpdate(s,{photos:o}):(category=await new l({photos:o}).save(),s=category.id)),a.send(JSON.stringify({filenames:o,categoryId:s}))},module.exports.postAddGalery=async(i,a)=>{const{files:t}=await i,{categoryId:s}=await i.body,o=[],d=await l.findById(s).select({_id:0,photos:1});return o.push(...d.photos),t.length&&(S(),t.forEach(i=>{const{filename:a,originalname:t}=i,s=h(t);n.renameSync(e.join(_,a),e.join(I,s)),o.push(s)}),await l.findByIdAndUpdate(s,{photos:o})),a.send(JSON.stringify({filenames:o}))},module.exports.postDeleteGaleryImage=async(i,a)=>{const{categoryId:t,filename:s}=i.body;let o=[];const{photos:d}=await l.findById(t).select({_id:0,photos:1}).lean();n.unlinkSync(e.join(I,s));const r=d.indexOf(s);return r>-1?(o=[...d.slice(0,r),...d.slice(r+1)],await l.findByIdAndUpdate(t,{photos:o})):o=d,a.send(JSON.stringify({filenames:o}))};